import { NestFactory } from "@nestjs/core";
import { AppModule } from "./app.module";
import "dotenv/config";
import { MicroserviceOptions, Transport } from "@nestjs/microservices";
import { ValidationPipe } from "@nestjs/common";
import * as cookieParser from "cookie-parser";
import { Server } from "socket.io";

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  app.setGlobalPrefix("api");

  // B·∫≠t CORS ƒë·ªÉ ch·∫•p nh·∫≠n y√™u c·∫ßu t·ª´ b·∫•t k·ª≥ ngu·ªìn n√†o (ho·∫∑c ch·ªâ t·ª´ c√°c ngu·ªìn c·ª• th·ªÉ)
  app.enableCors({
    origin: [
      "http://127.0.0.1:5500",
      "http://127.0.0.1:5173",
      "http://localhost:5173",
      "http://127.0.0.1:5174",
      "https://socialmediaclone-frontend-v1.onrender.com",
    ], // Ch·ªâ ch·∫•p nh·∫≠n y√™u c·∫ßu t·ª´ ƒë·ªãa ch·ªâ n√†y
    methods: ["GET", "POST", "PUT", "DELETE"], // C√°c ph∆∞∆°ng th·ª©c HTTP ƒë∆∞·ª£c ph√©p
    allowedHeaders: ["Content-Type", "Authorization", "Range"],
    credentials: true, // C√°c header ƒë∆∞·ª£c ph√©p
  });
  app.use(cookieParser());

  // üëá ƒê√¢y l√† ph·∫ßn b·∫Øt bu·ªôc n·∫øu b·∫°n mu·ªën listen consumer
  // app.connectMicroservice<MicroserviceOptions>({
  //   transport: Transport.RMQ,
  //   options: {
  //     urls: ["amqp://localhost:5672"],
  //     queue: "demoQueue",
  //     queueOptions: { durable: true },
  //   },
  // });

  app.connectMicroservice<MicroserviceOptions>({
    transport: Transport.RMQ,
    options: {
      urls: [process.env.RABBITMQ_URL],
      queue: "sync_user_queue",
      queueOptions: { durable: true },
    },
  });

  await app.startAllMicroservices(); // üëà ƒë·ª´ng qu√™n c√°i n√†y
  await app.listen(process.env.PORT_SERVER || 3000);
  console.log(`Sever is running on port ${process.env.PORT_SERVER}`);
}
bootstrap();
